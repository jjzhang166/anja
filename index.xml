<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="html.xsl"?>
<document>
	<title>Anja user's guide</title>
	<author>Torbjörn Rathsman</author>
	<titlepic>
		<includegraphics src="anjalogo-hires.png" media="(min-width:1024px)" />
		<includegraphics src="anjalogo.png" media="(max-width:1024px)" />
	</titlepic>

	<abstract>
		<p>Anja is a sample player designed for live sound effect playback. Anja makes it possible to assign sound effects to the keys of the computer keyboard. Anja also featues a channel mixer with 16 channels, making it possible to fade a group of sound effects together. The backend of Anja is JACK, the low-latency audio server. The session file format of Anja is in a formalized text format, optimized for human readability.</p>
	</abstract>

	<tableofcontents />

	<chapter id="intro">Introduction</chapter>
	<p><strong>Anja</strong> is a sample player designed for live sound effect playback. Anja makes it possible to assign sound effects to the keys typing keys of the computer keyboard. To make it easier to find sound effects, each sound effect can have a description and a color, that shows up on Anja's virtual computer keyboard.</p>

	<p>Anja also featues a channel mixer with 16 channels. All sound effects are routed through one of these channels. The channel mixer makes it possible to fade a group of sound effects together. As with sound effects, each channel has a color and a description. In addition to color, description and channel gain, each channel also has an adjustable fade time, that is used to automatically fade the channel.</p>

	<p>The backend of Anja is JACK, the low-latency audio server<cite>jack</cite>. This makes it possible to connect Anja to other JACK clients enabling the creation of more complex signal flows.</p>

	<p>The session file format of Anja is in a formalized text format, optimized for human readability. The syntax of the session files has taken inspiration from formats such as Markdown<cite>markdown</cite> and is very similar to the syntax used in the "Doom template file"<cite>doomwiki</cite>. Therefore, session files can be easiliy edited by hand in a text editor, to the price of somewhat larger session files.</p>

	<section id="requirements">System requirements</section>
	<p>To run Anja, a working installation of JACK<cite>jack</cite> is required. Moreover, Anja requires <libname>libsndfile</libname> and <libname>GTK+</libname> version 3. Anja runs smoothly on an Intel® Pentium® M, and thus, it is only moderately CPU demanding. However, since Anja completely loads all sound files referenced from a session file, it may consume some RAM. At <quantity unit="kHz">48</quantity>, the RAM usage is <quantity unit="MiB/min">11</quantity> of sound. The minimum screen resolution for running Anja in fullscreen mode is <quantity unit="px">923</quantity> &#215; <quantity unit="px">599</quantity>. In windowed mode, the required screen resolution depends on the windowing system, but it is approximately <quantity unit="px">930</quantity> &#215; <quantity unit="px">630</quantity>.</p>


	<section id="comparison">Anja compared to other software</section>
	<p>There are other sample players that also may be used with JACK. One such program is Hydrogen<cite>hydrogen</cite>. Compared to Hydrogen, Anja lacks a sequencer. However, in Hydrogen, waveforms need to be assigned in a particular order, and Hydrogen does not feature an on-screen keyboard. Other features in Anja is event-triggerd auto-fade, and also a kill-all-softly feature.</p>

	<chapter id="install">Installing Anja</chapter>

	<p>Before Anja can be used, the program needs to be installed. This chapter goes through the installation procedure.</p>

	<section id="installlinux">Installing on a GNU/Linux system</section>

	<p>On GNU/Linux, the recommended way of installing Anja is to install it from the software repository. If there is no package available, download the source package<cite>anjasrc</cite>, and compile it as according to the instructions in <ref>compile</ref>.</p>

	<section id="compile">Compiling Anja</section>
	<p>Before Anja can be compiled, certain programs, and development packages are needed. These are listed in <ref>depstab</ref>, together with their purpose. Obeserve that some of the packages may need a corresponding development package. On Ubuntu, these packages usually haave the suffix <em>dev</em>. Anja has been written using the <prgname>wand</prgname> build tool. Therefore, this program has to be available when Anja is compiled. The <dfn>makefile</dfn> distributed with Anja, tries to detect <prgname>wand</prgname> before the compilation starts. If the <dfn>makefile</dfn> fails to detect <prgname>wand</prgname>, a package containing <prgname>wand</prgname> is downloaded from the author's GitHub repository by using <prgname>wget</prgname>.</p>

<table id="depstab">
	<caption>Programs and packages needed to compile Anja. Packages marked with a ✻ symbol are libraries that may need a corresponding development package.</caption>
	<tabular>
		<colheaders><col/><col>Name</col><col>Purpose</col></colheaders>
		<row><col></col><col><prgname>bash</prgname></col><col>Command line interpreter used to interpret commands given by <prgname>make</prgname></col></row>
		<row><col></col><col>Blender</col><col>Used to render Anja's logo.</col></row>
		<row><col></col><col><prgname>g++</prgname></col><col>The GNU C++ compiler</col></row>
		<row><col></col><col><prgname>git</prgname></col><col>Used to retrieve version info</col></row>
		<row><col></col><col><prgname>head</prgname></col><col>Used to extract information about the compiler</col></row>
		<row><col></col><col><prgname>jackd</prgname></col><col>Audio backend server</col></row>
		<row><col>✻</col><col><libname>libgtk-3</libname></col><col>GUI backend on GNU/Linux</col></row>
		<row><col>✻</col><col><libname>libjack</libname></col><col>Audio backend server, client library</col></row>
		<row><col>✻</col><col><libname>libsndfile</libname></col><col>Library used to load sound files</col></row>
		<row><col></col><col><prgname>make</prgname></col><col>Build script interpreter</col></row>
		<row><col></col><col><prgname>mv</prgname></col><col>Used to rename Blender output files</col></row>
		<row><col></col><col>ImageMagick</col><col>Used to generate an RGBA dump from a PNG file</col></row>
		<row><col></col><col><prgname>tr</prgname></col><col>Used to extract information about the compiler. Also used to replace newlines with null terminator in compilation information strings.</col></row>
		<row><col></col><col><prgname>touch</prgname></col><col>Used to force recompilation of the program information module</col></row>
		<row><col></col><col><prgname>wand</prgname> (from Gabi)</col><col>Used as compiler frontend</col></row>
		<row><col></col><col><prgname>wget</prgname></col><col>In abscence of <prgname>wand</prgname>, <prgname>wget</prgname> is used to download <prgname>wand</prgname> version 5.77 from the author's GitHub repository.</col></row>
		<row><col></col><col><prgname>xxd</prgname></col><col>Used to generate an RGBA dump from the PNG file produced by <prgname>Blender</prgname></col></row>
	</tabular>
</table>

<p>As mentioned above, the Anja source package can be obtained from <cite>anjasrc</cite>. Following this link gives the choice of downloading a gzipped tarball, or a zip archive. For the purpose of this tutorial, it is assumed that the tarball is downloaded. In order to extract that tarball, which is assumed to be called <var>filename</var>, issue the command</p>

	<code language="bash">tar -xf filename</code>

	<p>This will create a directory with a name derived from the name of the downloaded file, in the current working directory. If <var>filename</var> is <dirname>anja-release-2-2.tar.gz</dirname>, it will be called <dirname>anja-release-2-2</dirname>. Now <prgname>cd</prgname> into that directory and run <prgname>make</prgname>:</p>

	<code language="bash">cd anja-release-2-2
make</code>

<p>When running <prgname>make</prgname>, files are written to <dirname>__wand_targets_rel</dirname>. After the compilation has completed, Anja can be launched directly by running the command</p>
<code language="bash">__wand_targets_rel/anja</code>

<infobox type="warning">Normally, Anja is distributed with pre-rendered logo images. It may happen that the corresponding <prgname>Blender</prgname> file has been updated and not the logo images. In this case, it will take a much longer time than normal, to compile Anja, since the <dfn>makefile</dfn> will need to rerender the logo.</infobox>

	<p>To make it easier to launch Anja, you can move it to a place mentioned in the <env>PATH</env> variable. For example, if you have <prgname>sudo</prgname> permissions, you can do</p>
<code language="bash">sudo mv __wand_targets_rel/anja /usr/local/bin</code>
<p>If you do not have <prgname>sudo</prgname> permissions, you can move it to <dirname>~/bin</dirname> instead:</p>
<code language="bash">mv __wand_targets_rel/anja ~/bin</code>

	<chapter id="using">Using Anja</chapter>
	<p>Starting Anja without any command line arguments brings up a window that looks like the one presented in <ref>anjastart</ref>. The workspace consits of three main parts annotated in <ref>anjaworkspace</ref>. To the left, there the <dfn>Action panel</dfn> a panel with different buttons that affect Anja's current state. To the right of that, the <dfn>Keyboard view</dfn> is located, and below that, there is a <dfn>Settings panel</dfn>, controling which waveforms are loaded as well as the playback of loaded waveforms. Above the <dfn>Keyboard view</dfn>, there is an area for text messages indicating the state of the audio engine.</p>

	<figure id="anjastart">
		<includegraphics src="mainwindow-start.png" />
		<caption>The Anja window, as shown after launching Anja without any command line arguments</caption>
	</figure>

	<figure id="anjaworkspace">
		<includegraphics src="anjaworkspace.png" />
		<caption>The different parts of the Anja workspace. (1) is the <dfn>Action panel</dfn>, used to control Anja's state, (2) is the <dfn>Keyboard view</dfn>, which selects waveform slots and channels, and (3) is the <dfn>Settings panel</dfn>, which controls which loads waveforms and controls the playback of loaded waveforms.</caption>
	</figure>

	<section id="addfx">Loading a waveform</section>
	<p>To load a waveform, choose a slot by clicking on the corresponding key in the <dfn>Keyboard view</dfn>. It is possible to choose any key except one of the function keys, but it is recommended to avoid the keys <kbd>Alt</kbd> and <kbd>❖</kbd>. After choosing a slot click <ui-button>Browse...</ui-button> to the right of <ui-formfield>Source</ui-formfield> field now visible in th <dfn>Settings panel</dfn>. This brings up a file selection dialog. It is also possible to type a filename directly in the text input field to the left of <ui-button>Browse...</ui-button>.</p>

	<infobox type="warning">In case a multi-channel audio file is loaded, only the data for the first (usually the "left" channel) will be loaded. This is because Anja uses mono waveforms. For information about playing multi-channel audio, see <ref>playback_advanced</ref>.
	</infobox>

	<section id="play">Playing waveforms</section>
	<p>Before any sound can be heard from Anja, the <dfn>audio engine</dfn> has to be running. The <dfn>audio engine</dfn> is started by clicking the button <ui-button>Start engine</ui-button> in the <dfn>Action panel</dfn>. Now, when the engine is running, there should be a new JACK client with a name that derived from the name of the current Anja session. For example, after starting the engine on the default session, there should be a JACK client called <env>New session.anja</env>. To list all JACK clients and ports open a teminal and type</p>

	<code language="bash">jack_lsp</code>

	<p>If you did not load any old session, or have not modified the default session, you will see something like</p>
	<code language="nohighlight">system:capture_1
system:capture_2
system:playback_1
system:playback_2
New session.anja:Master out
New session.anja:Audio capture
New session.anja:MIDI in
New session.anja:MIDI out</code>
<p>The interesting port in this case is <dirname>New session.anja:Master out</dirname>. Connecting this port to <dirname>system:playback_1</dirname> and <dirname>system:playback_2</dirname> will enable sound output from Anja to the left and right speaker (or what ever is connected to the corresponding audio output ports of the computer). JACK ports can be connected by using the command <prgname>jack_connect</prgname><cite>manjack</cite>. The command to connect these ports would be</p>
<code language="bash">jack_connect 'New session.anja:Master out' 'system:playback_1'
jack_connect 'New session.anja:Master out' 'system:playback_2'
</code>
<p>The status message shown when the audio engine is running suggests using a JACK patchbay tool such as <prgname>Catia</prgname><cite>catia</cite> shown in <ref>catia</ref>. In <prgname>Catia</prgname> ports can be connected using "Drag and drop".</p>

<p>When the <dfn>audio engine</dfn> is started, and the output port is connected, a loaded waveform can be played by hitting the corresponding key on the computer keyboard.</p>

<infobox type="warning">Trigging playback through the computer keyboard is only possible when the <dfn>Keyboard view</dfn> has keyboard focus. This is indicated by a green rectangle.</infobox>

<figure id="catia">
	<includegraphics src="catiaanja.png"/>
	<caption>Anja with an Anja session started</caption>
</figure>

	<bibliography>
		<item id="anjasrc">Anja source archive <url>https://github.com/milasudril/anja/releases/latest</url></item>
		<item id="jack">JACK Audio Connection Kit <url>http://jackaudio.org</url></item>
		<item id="markdown">Daring Firball: Markdown <url>https://daringfireball.net/projects/markdown</url></item>
		<item id="doomwiki">Doom file template <url>http://doom.wikia.com/wiki/Doom_file_template</url></item>
		<item id="hydrogen">Hydrogen <url>http://www.hydrogen-music.org/hcms</url></item>
		<item id="manjack"><prgname>jack_connect</prgname> manual page</item>
		<item id="catia">... <url>http://kxstudio.org</url></item>
	</bibliography>

<appendix />

<chapter id="cmdopts">Command line options</chapter>
	<p>It is possible to control how Anja is started from the command line. The general syntax is</p>

	<code language="bash">anja [OPTIONS] [--] session</code>

	<p>All possible options are listed in <ref>cmdoptstab</ref>.</p>

	<table id="cmdoptstab">
		<caption>Command line options for Anja</caption>
		<tabular>
			<colheaders><col>Option</col><col>Description</col></colheaders>
			<row><col>--about</col><col>prints an about message to standard output and exits</col></row>
			<row><col>--dark</col><col>starts Anja in dark mode. This is default.</col></row>
			<row><col>--fullscreen</col><col>starts Anja in fullscreen mode</col></row>
			<row><col>--light</col><col>starts Anja in light mode</col></row>
			<row><col>--windowed</col><col>starts Anja in windowed mode. This is default.</col></row>
			<row><col>--help</col><col>prints a summary of command line options to standard output and exits</col></row>
		</tabular>
	</table>

</document>
